# Generated by Django 5.2.1 on 2025-06-09 18:49

import ckeditor.fields
import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('user', '0002_teacherapplication'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', ckeditor.fields.RichTextField()),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('points', models.PositiveIntegerField(default=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('allow_late_submissions', models.BooleanField(default=False)),
                ('late_submission_penalty', models.FloatField(default=0, help_text='نسبة الخصم للتسليم المتأخر')),
            ],
        ),
        migrations.CreateModel(
            name='BookCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1000)),
                ('question_type', models.CharField(choices=[('multiple_choice', 'اختيار من متعدد'), ('true_false', 'صح أو خطأ'), ('short_answer', 'إجابة قصيرة')], default='multiple_choice', max_length=20)),
                ('points', models.PositiveIntegerField(default=1)),
                ('explanation', models.TextField(blank=True, help_text='شرح الإجابة الصحيحة', null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='question_images/')),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_text', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('submitted', 'تم التسليم'), ('graded', 'تم التقييم'), ('returned', 'تم الإعادة للتعديل')], default='submitted', max_length=20)),
                ('grade', models.FloatField(blank=True, null=True)),
                ('feedback', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('is_late', models.BooleanField(default=False)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='website.assignment')),
                ('graded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='graded_submissions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_submissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='attachments/')),
                ('object_id', models.PositiveIntegerField()),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('author_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('book_file', models.FileField(upload_to='books/')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='books/covers/')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('is_available', models.BooleanField(default=True)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='books', to='website.bookcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=2000, null=True)),
                ('level', models.CharField(blank=True, choices=[('beginner', 'مبتدئ'), ('intermediate', 'متوسط'), ('advanced', 'متقدم')], default='beginner', max_length=20, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('image_course', models.ImageField(blank=True, default='blank_course.png', null=True, upload_to='course/')),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=100, null=True)),
                ('small_description', models.TextField(blank=True, null=True)),
                ('learned', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('rating', models.FloatField(blank=True, default=0, null=True)),
                ('total_video', models.IntegerField(blank=True, null=True)),
                ('vidoes_time', models.CharField(blank=True, max_length=2000, null=True)),
                ('total_module', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.CharField(choices=[('pending', 'قيد الانتظار'), ('published', 'منشور'), ('draft', 'مسودة')], default='pending', max_length=20)),
                ('syllabus_pdf', models.FileField(blank=True, help_text='Upload course syllabus PDF', null=True, upload_to='course_pdfs/syllabus/')),
                ('materials_pdf', models.FileField(blank=True, help_text='Upload additional course materials PDF', null=True, upload_to='course_pdfs/materials/')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='website.category')),
                ('enroller_user', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.organization')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.teacher')),
                ('tags', models.ManyToManyField(blank=True, to='website.tags')),
            ],
        ),
        migrations.AddField(
            model_name='assignment',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='website.course'),
        ),
        migrations.CreateModel(
            name='CourseProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_enrollments', models.PositiveIntegerField(default=0)),
                ('active_learners', models.PositiveIntegerField(default=0)),
                ('completion_rate', models.FloatField(default=0)),
                ('average_progress', models.FloatField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='progress_stats', to='website.course')),
            ],
        ),
        migrations.CreateModel(
            name='CourseReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review_text', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='website.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Course Review',
                'verbose_name_plural': 'Course Reviews',
                'ordering': ['-created_at'],
                'unique_together': {('course', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('time_limit', models.PositiveIntegerField(blank=True, help_text='وقت الامتحان بالدقائق', null=True)),
                ('pass_mark', models.FloatField(default=60.0, help_text='النسبة المئوية للنجاح')),
                ('is_final', models.BooleanField(default=False, help_text='هل هذا امتحان نهائي للدورة؟')),
                ('total_points', models.PositiveIntegerField(default=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('allow_multiple_attempts', models.BooleanField(default=False)),
                ('max_attempts', models.PositiveIntegerField(default=1)),
                ('show_answers_after', models.BooleanField(default=False, help_text='إظهار الإجابات الصحيحة بعد الانتهاء')),
                ('randomize_questions', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='website.course')),
            ],
        ),
        migrations.CreateModel(
            name='ExamQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('question_type', models.CharField(choices=[('multiple_choice', 'اختيار من متعدد'), ('true_false', 'صح أو خطأ'), ('short_answer', 'إجابة قصيرة')], default='multiple_choice', max_length=20)),
                ('points', models.PositiveIntegerField(default=1)),
                ('explanation', models.TextField(blank=True, help_text='شرح الإجابة الصحيحة', null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='exam_question_images/')),
                ('order', models.PositiveIntegerField(default=0)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='website.exam')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ExamAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1000)),
                ('is_correct', models.BooleanField(default=False)),
                ('explanation', models.TextField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='website.examquestion')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='عنوان الاجتماع')),
                ('description', models.TextField(verbose_name='وصف الاجتماع')),
                ('meeting_type', models.CharField(choices=[('ZOOM', 'اجتماع عبر زووم'), ('NORMAL', 'اجتماع عادي')], max_length=10, verbose_name='نوع الاجتماع')),
                ('start_time', models.DateTimeField(verbose_name='وقت البدء')),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=3600), verbose_name='المدة')),
                ('zoom_link', models.URLField(blank=True, null=True, verbose_name='رابط زووم')),
                ('recording_url', models.URLField(blank=True, null=True, verbose_name='رابط التسجيل')),
                ('materials', models.FileField(blank=True, null=True, upload_to='meeting_materials/', verbose_name='مواد الاجتماع')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('notification_task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_meetings', to=settings.AUTH_USER_MODEL, verbose_name='منشئ الاجتماع')),
            ],
            options={
                'verbose_name': 'اجتماع',
                'verbose_name_plural': 'الاجتماعات',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=2000, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('video', models.FileField(blank=True, null=True, upload_to='module_videos/')),
                ('video_duration', models.IntegerField(default=0)),
                ('pdf', models.FileField(blank=True, null=True, upload_to='module_pdfs/')),
                ('note', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='website.course')),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
                'ordering': ['number'],
            },
        ),
        migrations.AddField(
            model_name='exam',
            name='module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='module_exams', to='website.module'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='module_assignments', to='website.module'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('DAY_BEFORE', 'قبل يوم'), ('HOUR_BEFORE', 'قبل ساعة'), ('CANCELLED', 'تم الإلغاء'), ('RESCHEDULED', 'تم إعادة الجدولة'), ('CUSTOM', 'مخصص')], default='CUSTOM', max_length=20, verbose_name='نوع الإشعار')),
                ('message', models.TextField(verbose_name='الرسالة')),
                ('scheduled_time', models.DateTimeField(verbose_name='وقت الجدولة')),
                ('sent', models.BooleanField(default=False, verbose_name='تم الإرسال')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='وقت الإرسال')),
                ('is_read', models.BooleanField(default=False, verbose_name='تمت القراءة')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.meeting', verbose_name='الاجتماع')),
                ('recipients', models.ManyToManyField(related_name='meeting_notifications', to=settings.AUTH_USER_MODEL, verbose_name='المستلمون')),
            ],
            options={
                'verbose_name': 'إشعار',
                'verbose_name_plural': 'الإشعارات',
                'ordering': ['-scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1000)),
                ('is_correct', models.BooleanField(default=False)),
                ('explanation', models.TextField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='website.question')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('quiz_type', models.CharField(choices=[('video', 'فيديو كويز'), ('module', 'كويز وحدة'), ('quick', 'كويز سريع')], default='video', max_length=20)),
                ('start_time', models.DurationField(blank=True, default=datetime.timedelta(0), null=True)),
                ('time_limit', models.PositiveIntegerField(blank=True, help_text='Time limit in minutes', null=True)),
                ('pass_mark', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_quizzes', to='website.course')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='module_quizzes', to='website.module')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='website.quiz'),
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('passed', models.BooleanField(blank=True, null=True)),
                ('attempt_number', models.PositiveIntegerField(default=1)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='website.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'quiz', 'attempt_number')},
            },
        ),
        migrations.CreateModel(
            name='QuizUserAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer', models.TextField(blank=True, null=True)),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('points_earned', models.FloatField(default=0)),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='website.quizattempt')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.question')),
                ('selected_answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='website.answer')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply_text', ckeditor.fields.RichTextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='website.coursereview')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Review Reply',
                'verbose_name_plural': 'Review Replies',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('issuing_organization', models.CharField(max_length=255)),
                ('issue_date', models.DateField()),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('credential_id', models.CharField(blank=True, max_length=255)),
                ('credential_url', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('certificate_image', models.ImageField(blank=True, upload_to='certificates/')),
                ('verification_status', models.BooleanField(default=False)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('grade', models.CharField(blank=True, max_length=10, null=True)),
                ('is_auto_generated', models.BooleanField(default=True, help_text='تم إنشاؤها تلقائيًا بعد إكمال الدورة')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_certifications', to=settings.AUTH_USER_MODEL)),
                ('related_courses', models.ManyToManyField(blank=True, related_name='course_certifications', to='website.course')),
                ('tags', models.ManyToManyField(blank=True, related_name='certifications', to='website.tags')),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='العنوان')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True, verbose_name='الرابط')),
                ('content', ckeditor.fields.RichTextField(verbose_name='المحتوى')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='ملخص')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('image', models.ImageField(blank=True, null=True, upload_to='articles/', verbose_name='الصورة')),
                ('status', models.CharField(choices=[('draft', 'مسودة'), ('published', 'منشور')], default='draft', max_length=20, verbose_name='الحالة')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='عدد المشاهدات')),
                ('featured', models.BooleanField(default=False, verbose_name='مميز')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to=settings.AUTH_USER_MODEL, verbose_name='الكاتب')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to='website.category', verbose_name='التصنيف')),
                ('tags', models.ManyToManyField(blank=True, related_name='articles', to='website.tags', verbose_name='الوسوم')),
            ],
            options={
                'verbose_name': 'مقالة',
                'verbose_name_plural': 'المقالات',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserExamAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('passed', models.BooleanField(blank=True, null=True)),
                ('attempt_number', models.PositiveIntegerField(default=1)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='website.exam')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'exam', 'attempt_number')},
            },
        ),
        migrations.CreateModel(
            name='UserExamAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer', models.TextField(blank=True, null=True)),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('points_earned', models.FloatField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.examquestion')),
                ('selected_answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='website.examanswer')),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='website.userexamattempt')),
            ],
        ),
        migrations.CreateModel(
            name='ContentProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('note', 'Note/PDF'), ('quiz', 'Quiz'), ('assignment', 'Assignment')], max_length=20)),
                ('content_id', models.CharField(max_length=100)),
                ('completed', models.BooleanField(default=False)),
                ('completion_date', models.DateTimeField(auto_now=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.course')),
            ],
            options={
                'verbose_name_plural': 'Content Progress',
                'unique_together': {('user', 'course', 'content_type', 'content_id')},
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='website.cart')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.course')),
            ],
            options={
                'unique_together': {('cart', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('progress', models.FloatField(default=0.0)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='website.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_courses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('course', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('time_in', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_out', models.DateTimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('is_present', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='website.course')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='website.module')),
            ],
            options={
                'unique_together': {('user', 'course', 'date', 'module')},
            },
        ),
        migrations.CreateModel(
            name='ModuleProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('video_watched', models.BooleanField(default=False)),
                ('pdf_viewed', models.BooleanField(default=False)),
                ('notes_read', models.BooleanField(default=False)),
                ('quiz_completed', models.BooleanField(default=False)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='website.module')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Module Progress',
                'unique_together': {('user', 'module')},
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_attending', models.BooleanField(default=False, verbose_name='حاضر')),
                ('attendance_time', models.DateTimeField(blank=True, null=True, verbose_name='وقت الحضور')),
                ('exit_time', models.DateTimeField(blank=True, null=True, verbose_name='وقت المغادرة')),
                ('attendance_duration', models.DurationField(blank=True, null=True, verbose_name='مدة الحضور')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.meeting', verbose_name='الاجتماع')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'مشارك',
                'verbose_name_plural': 'المشاركون',
                'unique_together': {('meeting', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_reviews', to='website.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Course Review (Legacy)',
                'verbose_name_plural': 'Course Reviews (Legacy)',
                'ordering': ['-created_at'],
                'unique_together': {('course', 'user')},
            },
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('overall_progress', models.FloatField(default=0)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='website.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Progress',
                'unique_together': {('user', 'course')},
            },
        ),
    ]
